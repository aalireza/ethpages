{"id":"node_modules/uport-credentials/lib/Credentials.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/package.json","includedInParent":true,"mtime":1550368277431},{"name":"babel-runtime/helpers/typeof","loc":{"line":7,"column":23},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/typeof.js"},{"name":"babel-runtime/core-js/object/keys","loc":{"line":11,"column":20},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/core-js/object/keys.js"},{"name":"babel-runtime/helpers/toConsumableArray","loc":{"line":15,"column":34},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/toConsumableArray.js"},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":19,"column":40},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/objectWithoutProperties.js"},{"name":"babel-runtime/regenerator","loc":{"line":23,"column":27},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/regenerator/index.js"},{"name":"babel-runtime/helpers/asyncToGenerator","loc":{"line":27,"column":33},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/asyncToGenerator.js"},{"name":"babel-runtime/helpers/extends","loc":{"line":31,"column":24},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/extends.js"},{"name":"babel-runtime/core-js/promise","loc":{"line":35,"column":23},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/core-js/promise.js"},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":39,"column":31},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/classCallCheck.js"},{"name":"babel-runtime/helpers/createClass","loc":{"line":43,"column":28},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/babel-runtime/helpers/createClass.js"},{"name":"elliptic","loc":{"line":47,"column":24},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/elliptic/lib/elliptic.js"},{"name":"did-jwt","loc":{"line":49,"column":22},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/index.js"},{"name":"did-jwt/lib/Digest","loc":{"line":51,"column":22},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/Digest.js"},{"name":"uport-did-resolver","loc":{"line":53,"column":32},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/lib/register.js"},{"name":"ethr-did-resolver","loc":{"line":57,"column":31},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/ethr-did-resolver/lib/register.js"},{"name":"https-did-resolver","loc":{"line":61,"column":32},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/https-did-resolver/lib/register.js"},{"name":"uport-lite","loc":{"line":65,"column":25},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-lite/lib/index.js"},{"name":"mnid","loc":{"line":69,"column":20},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/lib/index.js"},{"name":"./Contract.js","loc":{"line":71,"column":24},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Credentials.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-credentials/lib/Contract.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _elliptic = require('elliptic');\n\nvar _didJwt = require('did-jwt');\n\nvar _Digest = require('did-jwt/lib/Digest');\n\nvar _uportDidResolver = require('uport-did-resolver');\n\nvar _uportDidResolver2 = _interopRequireDefault(_uportDidResolver);\n\nvar _ethrDidResolver = require('ethr-did-resolver');\n\nvar _ethrDidResolver2 = _interopRequireDefault(_ethrDidResolver);\n\nvar _httpsDidResolver = require('https-did-resolver');\n\nvar _httpsDidResolver2 = _interopRequireDefault(_httpsDidResolver);\n\nvar _uportLite = require('uport-lite');\n\nvar _uportLite2 = _interopRequireDefault(_uportLite);\n\nvar _mnid = require('mnid');\n\nvar _Contract = require('./Contract.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar secp256k1 = new _elliptic.ec('secp256k1');\n\nvar Types = {\n  DISCLOSURE_REQUEST: 'shareReq',\n  DISCLOSURE_RESPONSE: 'shareResp',\n  TYPED_DATA_SIGNATURE_REQUEST: 'eip712Req',\n  VERIFICATION_SIGNATURE_REQUEST: 'verReq',\n  ETH_TX_REQUEST: 'ethtx',\n  PERSONAL_SIGN_REQUEST: 'personalSigReq'\n\n  /**\n   * Convert a date to seconds since unix epoch, rounded down to the nearest whole second\n   * @param   {Date}   date \n   * @returns {Number}\n   */\n};var toSeconds = function toSeconds(date) {\n  return Math.floor(date / 1000);\n};\n\n/**\n * The Credentials class allows you to easily create the signed payloads used in uPort including\n * credentials and signed mobile app requests (ex. selective disclosure requests\n * for private data). It also provides signature verification over signed payloads.\n */\n\nvar Credentials = function () {\n  /**\n   * Instantiates a new uPort Credentials object\n   *\n   * The following example is just for testing purposes. *You should never store a private key in source code.*\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   privateKey: '74894f8853f90e6e3d6dfdd343eb0eb70cca06e552ed8af80adadcc573b35da3'\n   * })\n   *\n   * The above example derives the public key used to generate the did, so only a private key is needed.\n   * Generating a public key from a private key is slow. It is recommended to configure the `did` option as well.\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   did: 'did:ethr:0xbc3ae59bc76f894822622cdef7a2018dbe353840',\n   *   privateKey: '74894f8853f90e6e3d6dfdd343eb0eb70cca06e552ed8af80adadcc573b35da3'\n   * })\n   *\n   * It is recommended to store the address and private key in environment variables for your server application\n   *\n   * @example\n   * import { Credentials, SimpleSigner } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   did: process.env.APPLICATION_DID,\n   *   signer: SimpleSigner(process.env.PRIVATE_KEY)\n   * })\n   *\n   * Instead of a private key you can pass in a [Signer Functions](https://github.com/uport-project/did-jwt#signer-functions) to\n   * present UX or call a HSM.\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   *\n   * function mySigner (data) {\n   *   return new Promise((resolve, reject) => {\n   *     const signature = /// sign it\n   *     resolve(signature)\n   *   })\n   * }\n   *\n   * const credentials = new Credentials({\n   *   did: process.env.APPLICATION_DID,\n   *   signer: mySigner\n   * })\n   *\n   * @param       {Object}            [settings]               optional setttings\n   * @param       {DID}               [settings.did]           Application [DID](https://w3c-ccg.github.io/did-spec/#decentralized-identifiers-dids) (unique identifier) for your application\n   * @param       {String}            [settings.privateKey]    A hex encoded 32 byte private key\n   * @param       {SimpleSigner}      [settings.signer]        a signer object, see [Signer Functions](https://github.com/uport-project/did-jwt#signer-functions)\n   * @param       {Object}            [settings.ethrConfig]    Configuration object for ethr did resolver. See [ethr-did-resolver](https://github.com/uport-project/ethr-did-resolver)\n   * @param       {Address}           [settings.address]       DEPRECATED your uPort address (may be the address of your application's uPort identity)\n   * @param       {Object}            [settings.networks]      DEPRECATED networks config object, ie. {  '0x94365e3b': { rpcUrl: 'https://private.chain/rpc', address: '0x0101.... }}\n   * @param       {UportLite}         [settings.registry]      DEPRECATED a registry object from UportLite\n   * @return      {Credentials}                                self\n   */\n  function Credentials() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        did = _ref.did,\n        address = _ref.address,\n        privateKey = _ref.privateKey,\n        signer = _ref.signer,\n        networks = _ref.networks,\n        registry = _ref.registry,\n        ethrConfig = _ref.ethrConfig;\n\n    (0, _classCallCheck3.default)(this, Credentials);\n\n    if (signer) {\n      this.signer = signer;\n    } else if (privateKey) {\n      this.signer = (0, _didJwt.SimpleSigner)(privateKey);\n    }\n\n    if (did) {\n      this.did = did;\n    } else if (address) {\n      if ((0, _mnid.isMNID)(address)) {\n        this.did = 'did:uport:' + address;\n      }\n      if (address.match('^0x[0-9a-fA-F]{40}$')) {\n        this.did = 'did:ethr:' + address;\n      }\n    } else if (privateKey) {\n      var kp = secp256k1.keyFromPrivate(privateKey);\n      var _address = (0, _Digest.toEthereumAddress)(kp.getPublic('hex'));\n      this.did = 'did:ethr:' + _address;\n    }\n\n    this.signJWT = function (payload, expiresIn) {\n      return (0, _didJwt.createJWT)(payload, {\n        issuer: _this.did,\n        signer: _this.signer,\n        alg: _this.did.match('^did:uport:') || (0, _mnid.isMNID)(_this.did) ? 'ES256K' : 'ES256K-R',\n        expiresIn: expiresIn\n      });\n    };\n\n    (0, _uportDidResolver2.default)(registry || (0, _uportLite2.default)({ networks: networks ? configNetworks(networks) : {} }));\n    (0, _ethrDidResolver2.default)(ethrConfig || {});\n    (0, _httpsDidResolver2.default)();\n  }\n\n  /**\n   * Generate a DID and private key, effectively creating a new identity that can sign and verify data\n   *\n   * @example\n   * const {did, privateKey} = Credentials.createIdentity()\n   * const credentials = new Credentials({did, privateKey, ...})\n   *\n   * @returns {Object} keypair\n   *           - {String} keypair.did         An ethr-did string for the new identity\n   *           - {String} keypair.privateKey  The identity's private key, as a string\n   */\n\n\n  (0, _createClass3.default)(Credentials, [{\n    key: 'createDisclosureRequest',\n\n\n    /**\n     *  Creates a [Selective Disclosure Request JWT](https://github.com/uport-project/specs/blob/develop/messages/sharereq.md)\n     *\n     *  @example\n     *  const req = { requested: ['name', 'country'],\n     *                callbackUrl: 'https://myserver.com',\n     *                notifications: true }\n     *  credentials.createDisclosureRequest(req).then(jwt => {\n     *      ...\n     *  })\n     *\n     *  @param    {Object}             [params={}]           request params object\n     *  @param    {Array}              params.requested      an array of attributes for which you are requesting credentials to be shared for\n     *  @param    {Array}              params.verified       an array of attributes for which you are requesting verified credentials to be shared for\n     *  @param    {Boolean}            params.notifications  boolean if you want to request the ability to send push notifications\n     *  @param    {String}             params.callbackUrl    the url which you want to receive the response of this request\n     *  @param    {String}             params.networkId      network id of Ethereum chain of identity eg. 0x4 for rinkeby\n     *  @param    {String}             params.rpcUrl         JSON RPC url for use with account connecting to non standard (private or permissioned chain). The JSON-RPC url must match the `networkId`\n     *  @param    {String[]}           params.vc             An array of JWTs about the requester, signed by 3rd parties\n     *  @param    {String}             params.accountType    Ethereum account type: \"general\", \"segregated\", \"keypair\", or \"none\"\n     *  @param    {Number}             expiresIn             Seconds until expiry\n     *  @return   {Promise<Object, Error>}                   a promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n    value: function createDisclosureRequest() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var expiresIn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n\n      var payload = {};\n      if (params.requested) payload.requested = params.requested;\n      if (params.verified) payload.verified = params.verified;\n      if (params.notifications) payload.permissions = ['notifications'];\n      if (params.callbackUrl) payload.callback = params.callbackUrl;\n      if (params.networkId) payload.net = params.networkId;\n      if (params.rpcUrl) {\n        if (params.networkId) {\n          payload.rpc = params.rpcUrl;\n        } else {\n          return _promise2.default.reject(new Error('rpcUrl was specified but no networkId'));\n        }\n      }\n      if (params.vc) payload.vc = params.vc;\n      if (params.exp) payload.exp = params.exp;\n\n      if (params.accountType) {\n        if (['general', 'segregated', 'keypair', 'none'].indexOf(params.accountType) >= 0) {\n          payload.act = params.accountType;\n        } else {\n          return _promise2.default.reject(new Error('Unsupported accountType ' + params.accountType));\n        }\n      }\n\n      return this.signJWT((0, _extends3.default)({}, payload, { type: Types.DISCLOSURE_REQUEST }), params.exp ? undefined : expiresIn);\n    }\n\n    /**\n     *  Create a credential (a signed JSON Web Token)\n     *\n     *  @example\n     *  credentials.createVerification({\n     *   sub: '5A8bRWU3F7j3REx3vkJ...', // uPort address of user, likely a MNID\n     *   exp: <future timestamp>,\n     *   claim: { name: 'John Smith' }\n     *  }).then( credential => {\n     *   ...\n     *  })\n     *\n     * @param    {Object}            [credential]           a unsigned claim object\n     * @param    {String}            credential.sub         subject of credential (a valid DID)\n     * @param    {String}            credential.claim       claim about subject single key value or key mapping to object with multiple values (ie { address: {street: ..., zip: ..., country: ...}})\n     * @param    {String}            credential.exp         time at which this claim expires and is no longer valid (seconds since epoch)\n     * @return   {Promise<Object, Error>}                   a promise which resolves with a credential (JWT) or rejects with an error\n     */\n\n  }, {\n    key: 'createVerification',\n    value: function createVerification(_ref2) {\n      var sub = _ref2.sub,\n          claim = _ref2.claim,\n          exp = _ref2.exp,\n          vc = _ref2.vc,\n          callbackUrl = _ref2.callbackUrl;\n\n      return this.signJWT({ sub: sub, claim: claim, exp: exp, vc: vc, callbackUrl: callbackUrl });\n    }\n\n    /**\n     *  Creates a request a for a DID to [sign a verification](https://github.com/uport-project/specs/blob/develop/messages/verificationreq.md)\n     *\n     *  @example\n     *  const unsignedClaim = {\n     *    claim: {\n     *      \"Citizen of city X\": {\n     *        \"Allowed to vote\": true,\n     *        \"Document\": \"QmZZBBKPS2NWc6PMZbUk9zUHCo1SHKzQPPX4ndfwaYzmPW\"\n     *      }\n     *    },\n     *    sub: \"2oTvBxSGseWFqhstsEHgmCBi762FbcigK5u\"\n     *  }\n     *  const aud = '0x123...'\n     *  const sub = '0x456...'\n     *  const callbackUrl = 'https://my.cool.site/handleTheResponse'\n     *  credentials.createVerificationSignatureRequest(unsignedClaim, {aud, sub, callbackUrl}).then(jwt => {\n     *    // ...\n     *  })\n     *\n     * @param    {Object}      unsignedClaim       Unsigned claim object which you want the user to attest\n     * @param    {Object}      [opts]\n     * @param    {String}      [opts.aud]          The DID of the identity you want to sign the attestation\n     * @param    {String}      [opts.sub]          The DID which the unsigned claim is about\n     * @param    {String}      [opts.riss]         The DID of the identity you want to sign the Verified Claim\n     * @param    {String}      [opts.callbackUrl]  The url to receive the response of this request\n     * @param    {Object[]}    [opts.vc]           An array of JWTs about the requester, signed by 3rd parties\n     * @returns  {Promise<Object, Error>}          A promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n\n  }, {\n    key: 'createVerificationSignatureRequest',\n    value: function createVerificationSignatureRequest(unsignedClaim) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          aud = _ref3.aud,\n          sub = _ref3.sub,\n          riss = _ref3.riss,\n          callbackUrl = _ref3.callbackUrl,\n          vc = _ref3.vc,\n          expiresIn = _ref3.expiresIn;\n\n      return this.signJWT({\n        unsignedClaim: unsignedClaim,\n        sub: sub,\n        riss: riss,\n        aud: aud,\n        vc: vc,\n        callback: callbackUrl,\n        type: Types.VERIFICATION_SIGNATURE_REQUEST\n      }, expiresIn);\n    }\n\n    /**\n     * Create a JWT requesting a signature on a piece of structured/typed data conforming to\n     * the ERC712 specification\n     * @example\n     * // A ERC712 Greeting Structure\n     * const data = {\n     *   types: {\n     *     EIP712Domain: [\n     *       {name: 'name', type: 'string'},\n     *       {name: 'version', type: 'string'},\n     *       {name: 'chainId', type: 'uint256'},\n     *       {name: 'verifyingContract', type: 'address'},\n     *       {name: 'salt', type: 'bytes32'}\n     *     ],\n     *     Greeting: [\n     *       {name: 'text', type: 'string'},\n     *       {name: 'subject', type: 'string'},\n     *     ]\n     *   },\n     *   domain: {\n     *     name: 'My dapp',\n     *     version: '1.0',\n     *     chainId: 1,\n     *     verifyingContract: '0xdeadbeef',\n     *     salt: '0x999999999910101010101010'\n     *   },\n     *   primaryType: 'Greeting',\n     *   message: {\n     *     text: 'Hello',\n     *     subject: 'World'\n     *   }\n     * }\n     * const sub = 'did:ethr:0xbeef1234' // Who the claim is \"about\"\n     * const aud = 'did:ethr:0xbeef4567' // Who you are asking to sign the claim\n     * const callbackUrl = 'https://my.cool.site/handleTheResponse'\n     * const signRequestJWT = credentials.createTypedDataSignatureRequest(data, {sub, aud, callbackUrl})\n     * // Send the JWT to a client\n     * // ...\n     *\n     * @param {Object} typedData              the ERC712 data to sign\n     * @param {Object} opts                   additional options for the jwt\n     *   @param {String} opts.sub             the subject of the JWT (arbitrary)\n     *   @param {String} opts.aud             the did of the identity you want to sign the typed data\n     *   @param {String} opts.callback        callback URL to handle the response\n     * @returns {Promise<Object, Error>}      a promise which resolves to a signed JWT or rejects with an error\n     */\n\n  }, {\n    key: 'createTypedDataSignatureRequest',\n    value: function createTypedDataSignatureRequest(typedData) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          from = _ref4.from,\n          net = _ref4.net,\n          callback = _ref4.callback;\n\n      // Check if the typedData is a valid ERC712 request\n      var _arr = ['types', 'primaryType', 'message', 'domain'];\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var prop = _arr[_i];\n        if (!typedData[prop]) throw new Error('Invalid EIP712 Request, must include ' + prop);\n      }\n      return this.signJWT({ typedData: typedData, from: from, net: net, callback: callback, type: Types.TYPED_DATA_SIGNATURE_REQUEST });\n    }\n\n    /**\n     * Create a JWT requesting an eth_sign/personal_sign from a user.\n     * @param {String} data hex encoded data to sign\n     * @param {Object} opts Additional options for request\n     * @returns {Promise<Object, Error>}\n     */\n\n  }, {\n    key: 'createPersonalSignRequest',\n    value: function createPersonalSignRequest(data) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          from = _ref5.from,\n          net = _ref5.net,\n          callback = _ref5.callback;\n\n      return this.signJWT({ data: data, from: from, net: net, callback: callback, type: Types.PERSONAL_SIGN_REQUEST });\n    }\n\n    /**\n     *  Given a transaction object, similarly defined as the web3 transaction object,\n     *  it creates a JWT transaction request and appends addtional request options.\n     *\n     *  @example\n     *  const txObject = {\n     *    to: '0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347',\n     *    value: '0.1',\n     *    fn: \"setStatus(string 'hello', bytes32 '0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347')\",\n     *  }\n     *  connect.createTxRequest(txObject, {callbackUrl: 'http://mycb.domain'}).then(jwt => {\n     *    ...\n     *  })\n     *\n     *  @param    {Object}    txObj               A web3 style transaction object\n     *  @param    {Object}    [opts]\n     *  @param    {String}    [opts.callbackUrl]  The url to receive the response of this request\n     *  @param    {String}    [opts.exp]          Time at which this request expires and is no longer valid (seconds since epoch)\n     *  @param    {String}    [opts.networkId]    Network ID for which this transaction request is for\n     *  @param    {String}    [opts.label]\n     *  @return   {String}                        a transaction request jwt\n     */\n\n  }, {\n    key: 'createTxRequest',\n    value: function createTxRequest(txObj) {\n      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          callbackUrl = _ref6.callbackUrl,\n          _ref6$exp = _ref6.exp,\n          exp = _ref6$exp === undefined ? 600 : _ref6$exp,\n          networkId = _ref6.networkId,\n          label = _ref6.label;\n\n      var payload = {};\n      if (callbackUrl) payload.callback = callbackUrl;\n      if (networkId) payload.net = networkId;\n      if (label) payload.label = label;\n      return this.signJWT((0, _extends3.default)({}, payload, txObj, { type: Types.ETH_TX_REQUEST }), exp);\n    }\n\n    /**\n     * Creates a [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md).\n     *\n     * This can either be used to share information about the signing identity or as the response to a\n     * [Selective Disclosure Flow](https://github.com/uport-project/specs/blob/develop/flows/selectivedisclosure.md),\n     * where it can be used to authenticate the identity.\n     *\n     *  @example\n     *  credentials.createDisclosureResponse({own: {name: 'Lourdes Valentina Gomez'}}).then(jwt => {\n     *      ...\n     *  })\n     *\n     *  @param    {Object}             [payload={}]           request params object\n     *  @param    {JWT}                payload.req            A selective disclosure Request JWT if this is returned as part of an authentication flow\n     *  @param    {Object}             payload.own            An object of self attested claims about the signer (eg. name etc)\n     *  @param    {Array}              payload.verified       An array of attestation JWT's to include\n     *  @param    {MNID}               payload.nad            An ethereum address encoded as an [MNID](https://github.com/uport-project/mnid)\n     *  @param    {Array}              payload.capabilities   An array of capability JWT's to include\n     *  @return   {Promise<Object, Error>}                    a promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n\n  }, {\n    key: 'createDisclosureResponse',\n    value: function () {\n      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var expiresIn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n        var verified;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!payload.req) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return (0, _didJwt.verifyJWT)(payload.req);\n\n              case 3:\n                verified = _context.sent;\n\n                if (verified.issuer) {\n                  payload.aud = verified.issuer;\n                }\n\n              case 5:\n                return _context.abrupt('return', this.signJWT((0, _extends3.default)({}, payload, { type: Types.DISCLOSURE_RESPONSE }), expiresIn));\n\n              case 6:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createDisclosureResponse() {\n        return _ref7.apply(this, arguments);\n      }\n\n      return createDisclosureResponse;\n    }()\n\n    /**\n     * Parse a selective disclosure response, and verify signatures on each signed claim (\"verification\") included.\n     * This function renames and applies special handling to certain recognized key-value pairs, and preserves others\n     * untouched.\n     * \n     * @private @deprecated\n     * @param     {Object}             response           A selective disclosure response payload, with associated did doc\n     * @param     {Object}             response.payload   A selective disclosure response payload, with associated did doc\n     * @param     {Object}             response.doc\n     */\n\n  }, {\n    key: 'processDisclosurePayload',\n    value: function () {\n      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(_ref8) {\n        var _this2 = this;\n\n        var doc = _ref8.doc,\n            payload = _ref8.payload;\n\n        var _payload$own, own, _payload$capabilities, capabilities, aud, req, iat, exp, type, mnid, deviceKey, did, boxPub, verified, rest, _doc$uportProfile, uportProfile, processed, invalid, verifying;\n\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Extract known key-value pairs from payload\n                _payload$own = payload.own, own = _payload$own === undefined ? {} : _payload$own, _payload$capabilities = payload.capabilities, capabilities = _payload$capabilities === undefined ? [] : _payload$capabilities, aud = payload.aud, req = payload.req, iat = payload.iat, exp = payload.exp, type = payload.type, mnid = payload.nad, deviceKey = payload.dad, did = payload.iss, boxPub = payload.boxPub, verified = payload.verified, rest = (0, _objectWithoutProperties3.default)(payload, ['own', 'capabilities', 'aud', 'req', 'iat', 'exp', 'type', 'nad', 'dad', 'iss', 'boxPub', 'verified']);\n                _doc$uportProfile = doc.uportProfile, uportProfile = _doc$uportProfile === undefined ? {} : _doc$uportProfile;\n\n                // Combine doc and payload into a single object, changing the names of some keys\n\n                processed = (0, _extends3.default)({\n                  did: did,\n                  boxPub: boxPub\n                }, own, uportProfile, rest);\n\n\n                if (deviceKey) processed.deviceKey = deviceKey;\n\n                if (mnid) {\n                  processed.mnid = mnid;\n                  processed.address = (0, _mnid.decode)(mnid).address;\n                }\n\n                // Push notifications are the only supported capability at the moment\n                if (capabilities.length === 1) {\n                  processed.pushToken = capabilities[0];\n                }\n\n                // Verify and decode each jwt included in the `verified` array, \n                // and return the verified property as an array of decoded objects.\n                // Return invalid jwts in the `invalid` array\n\n                if (!verified) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                invalid = [];\n                verifying = verified.map(function (token) {\n                  return (0, _didJwt.verifyJWT)(token, { audience: _this2.did }).catch(function () {\n                    invalid.push(token);\n                    return _promise2.default.resolve(null);\n                  });\n                });\n\n                // Format payloads and remove invalid JWTs\n\n                _context2.next = 11;\n                return _promise2.default.all(verifying);\n\n              case 11:\n                _context2.t0 = function (v) {\n                  return v ? (0, _extends3.default)({}, v.payload, { jwt: v.jwt }) : null;\n                };\n\n                _context2.t1 = function (list, item) {\n                  return item ? [].concat((0, _toConsumableArray3.default)(list), [item]) : list;\n                };\n\n                _context2.t2 = [];\n                processed.verified = _context2.sent.map(_context2.t0).reduce(_context2.t1, _context2.t2);\n\n\n                processed.invalid = invalid;\n\n              case 16:\n                return _context2.abrupt('return', processed);\n\n              case 17:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function processDisclosurePayload(_x10) {\n        return _ref9.apply(this, arguments);\n      }\n\n      return processDisclosurePayload;\n    }()\n\n    /**\n     *  Authenticates [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md) from uPort\n     *  client as part of the [Selective Disclosure Flow](https://github.com/uport-project/specs/blob/develop/flows/selectivedisclosure.md).\n     *\n     *  It Verifies and parses the given response token and verifies the challenge response flow.\n     *\n     *  @example\n     *  const resToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....'\n     *  credentials.authenticateDisclosureResponse(resToken).then(res => {\n     *      const credentials = res.verified\n     *      const name =  res.name\n     *      ...\n     *  })\n     *\n     *  @param    {String}                  token                 a response token\n     *  @param    {String}                  [callbackUrl=null]    callbackUrl\n     *  @return   {Promise<Object, Error>}                        a promise which resolves with a parsed response or rejects with an error.\n     */\n\n  }, {\n    key: 'authenticateDisclosureResponse',\n    value: function () {\n      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(token) {\n        var callbackUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        var _ref11, payload, doc, challenge;\n\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _didJwt.verifyJWT)(token, {\n                  audience: this.did,\n                  callbackUrl: callbackUrl,\n                  auth: true\n                });\n\n              case 2:\n                _ref11 = _context3.sent;\n                payload = _ref11.payload;\n                doc = _ref11.doc;\n\n                if (!payload.req) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.next = 8;\n                return (0, _didJwt.verifyJWT)(payload.req);\n\n              case 8:\n                challenge = _context3.sent;\n\n                if (!(challenge.payload.iss !== this.did)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw new Error('Challenge issuer does not match current identity: ' + challenge.payload.iss + ' !== ' + this.did);\n\n              case 13:\n                if (!(challenge.payload.type !== Types.DISCLOSURE_REQUEST)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                throw new Error('Challenge payload type invalid: ' + challenge.payload.type);\n\n              case 17:\n                return _context3.abrupt('return', this.processDisclosurePayload({ payload: payload, doc: doc }));\n\n              case 18:\n                _context3.next = 21;\n                break;\n\n              case 20:\n                throw new Error('Challenge was not included in response');\n\n              case 21:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function authenticateDisclosureResponse(_x12) {\n        return _ref10.apply(this, arguments);\n      }\n\n      return authenticateDisclosureResponse;\n    }()\n\n    /**\n     *  Verify and return profile from a [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md).\n     *\n     * The main difference between this and `authenticateDisclosureResponse()` is that it does not verify the challenge.\n     * This can be used to verify user profiles that have been shared through other methods such as QR codes and messages.\n     *\n     *  @example\n     *  const resToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....'\n     *  credentials.verifyDisclosure(resToken).then(profile => {\n     *      const credentials = profile.verified\n     *      const name =  profile.name\n     *      ...\n     *  })\n     *\n     *  @param    {String}                  token                 a response token\n     *  @return   {Promise<Object, Error>}                        a promise which resolves with a parsed response or rejects with an error.\n     */\n\n  }, {\n    key: 'verifyDisclosure',\n    value: function () {\n      var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(token) {\n        var _ref13, payload, doc;\n\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _didJwt.verifyJWT)(token, { audience: this.did });\n\n              case 2:\n                _ref13 = _context4.sent;\n                payload = _ref13.payload;\n                doc = _ref13.doc;\n                return _context4.abrupt('return', this.processDisclosurePayload({ payload: payload, doc: doc }));\n\n              case 6:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function verifyDisclosure(_x13) {\n        return _ref12.apply(this, arguments);\n      }\n\n      return verifyDisclosure;\n    }()\n\n    /**\n     *  Builds and returns a contract object which can be used to interact with\n     *  a given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\n     *  you can call the contract functions with this object. Each call will create a request.\n     *\n     *  @param    {Object}       abi          contract ABI\n     *  @return   {Object}                    contract object\n     */\n\n  }, {\n    key: 'contract',\n    value: function contract(abi) {\n      var _this3 = this;\n\n      var txObjHandler = function txObjHandler(txObj, opts) {\n        if (txObj.function) txObj.fn = txObj.function;\n        delete txObj['function'];\n        return _this3.createTxRequest(txObj, opts);\n      };\n      return (0, _Contract.ContractFactory)(txObjHandler.bind(this))(abi);\n    }\n  }], [{\n    key: 'createIdentity',\n    value: function createIdentity() {\n      var kp = secp256k1.genKeyPair();\n      var publicKey = kp.getPublic('hex');\n      var privateKey = kp.getPrivate('hex');\n      var address = (0, _Digest.toEthereumAddress)(publicKey);\n      var did = 'did:ethr:' + address;\n      return { did: did, privateKey: privateKey };\n    }\n  }]);\n  return Credentials;\n}();\n\nvar configNetworks = function configNetworks(nets) {\n  (0, _keys2.default)(nets).forEach(function (key) {\n    var net = nets[key];\n    if ((typeof net === 'undefined' ? 'undefined' : (0, _typeof3.default)(net)) === 'object') {\n      ;['registry', 'rpcUrl'].forEach(function (key) {\n        if (!net.hasOwnProperty(key)) throw new Error('Malformed network config object, object must have \\'' + key + '\\' key specified.');\n      });\n    } else {\n      throw new Error('Network configuration object required');\n    }\n  });\n  return nets;\n};\n\nexports.default = Credentials;","map":{"mappings":[{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/uport-credentials/lib/Credentials.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}}],"sources":{"node_modules/uport-credentials/lib/Credentials.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _elliptic = require('elliptic');\n\nvar _didJwt = require('did-jwt');\n\nvar _Digest = require('did-jwt/lib/Digest');\n\nvar _uportDidResolver = require('uport-did-resolver');\n\nvar _uportDidResolver2 = _interopRequireDefault(_uportDidResolver);\n\nvar _ethrDidResolver = require('ethr-did-resolver');\n\nvar _ethrDidResolver2 = _interopRequireDefault(_ethrDidResolver);\n\nvar _httpsDidResolver = require('https-did-resolver');\n\nvar _httpsDidResolver2 = _interopRequireDefault(_httpsDidResolver);\n\nvar _uportLite = require('uport-lite');\n\nvar _uportLite2 = _interopRequireDefault(_uportLite);\n\nvar _mnid = require('mnid');\n\nvar _Contract = require('./Contract.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar secp256k1 = new _elliptic.ec('secp256k1');\n\nvar Types = {\n  DISCLOSURE_REQUEST: 'shareReq',\n  DISCLOSURE_RESPONSE: 'shareResp',\n  TYPED_DATA_SIGNATURE_REQUEST: 'eip712Req',\n  VERIFICATION_SIGNATURE_REQUEST: 'verReq',\n  ETH_TX_REQUEST: 'ethtx',\n  PERSONAL_SIGN_REQUEST: 'personalSigReq'\n\n  /**\n   * Convert a date to seconds since unix epoch, rounded down to the nearest whole second\n   * @param   {Date}   date \n   * @returns {Number}\n   */\n};var toSeconds = function toSeconds(date) {\n  return Math.floor(date / 1000);\n};\n\n/**\n * The Credentials class allows you to easily create the signed payloads used in uPort including\n * credentials and signed mobile app requests (ex. selective disclosure requests\n * for private data). It also provides signature verification over signed payloads.\n */\n\nvar Credentials = function () {\n  /**\n   * Instantiates a new uPort Credentials object\n   *\n   * The following example is just for testing purposes. *You should never store a private key in source code.*\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   privateKey: '74894f8853f90e6e3d6dfdd343eb0eb70cca06e552ed8af80adadcc573b35da3'\n   * })\n   *\n   * The above example derives the public key used to generate the did, so only a private key is needed.\n   * Generating a public key from a private key is slow. It is recommended to configure the `did` option as well.\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   did: 'did:ethr:0xbc3ae59bc76f894822622cdef7a2018dbe353840',\n   *   privateKey: '74894f8853f90e6e3d6dfdd343eb0eb70cca06e552ed8af80adadcc573b35da3'\n   * })\n   *\n   * It is recommended to store the address and private key in environment variables for your server application\n   *\n   * @example\n   * import { Credentials, SimpleSigner } from 'uport-credentials'\n   * const credentials = new Credentials({\n   *   did: process.env.APPLICATION_DID,\n   *   signer: SimpleSigner(process.env.PRIVATE_KEY)\n   * })\n   *\n   * Instead of a private key you can pass in a [Signer Functions](https://github.com/uport-project/did-jwt#signer-functions) to\n   * present UX or call a HSM.\n   *\n   * @example\n   * import { Credentials } from 'uport-credentials'\n   *\n   * function mySigner (data) {\n   *   return new Promise((resolve, reject) => {\n   *     const signature = /// sign it\n   *     resolve(signature)\n   *   })\n   * }\n   *\n   * const credentials = new Credentials({\n   *   did: process.env.APPLICATION_DID,\n   *   signer: mySigner\n   * })\n   *\n   * @param       {Object}            [settings]               optional setttings\n   * @param       {DID}               [settings.did]           Application [DID](https://w3c-ccg.github.io/did-spec/#decentralized-identifiers-dids) (unique identifier) for your application\n   * @param       {String}            [settings.privateKey]    A hex encoded 32 byte private key\n   * @param       {SimpleSigner}      [settings.signer]        a signer object, see [Signer Functions](https://github.com/uport-project/did-jwt#signer-functions)\n   * @param       {Object}            [settings.ethrConfig]    Configuration object for ethr did resolver. See [ethr-did-resolver](https://github.com/uport-project/ethr-did-resolver)\n   * @param       {Address}           [settings.address]       DEPRECATED your uPort address (may be the address of your application's uPort identity)\n   * @param       {Object}            [settings.networks]      DEPRECATED networks config object, ie. {  '0x94365e3b': { rpcUrl: 'https://private.chain/rpc', address: '0x0101.... }}\n   * @param       {UportLite}         [settings.registry]      DEPRECATED a registry object from UportLite\n   * @return      {Credentials}                                self\n   */\n  function Credentials() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        did = _ref.did,\n        address = _ref.address,\n        privateKey = _ref.privateKey,\n        signer = _ref.signer,\n        networks = _ref.networks,\n        registry = _ref.registry,\n        ethrConfig = _ref.ethrConfig;\n\n    (0, _classCallCheck3.default)(this, Credentials);\n\n    if (signer) {\n      this.signer = signer;\n    } else if (privateKey) {\n      this.signer = (0, _didJwt.SimpleSigner)(privateKey);\n    }\n\n    if (did) {\n      this.did = did;\n    } else if (address) {\n      if ((0, _mnid.isMNID)(address)) {\n        this.did = 'did:uport:' + address;\n      }\n      if (address.match('^0x[0-9a-fA-F]{40}$')) {\n        this.did = 'did:ethr:' + address;\n      }\n    } else if (privateKey) {\n      var kp = secp256k1.keyFromPrivate(privateKey);\n      var _address = (0, _Digest.toEthereumAddress)(kp.getPublic('hex'));\n      this.did = 'did:ethr:' + _address;\n    }\n\n    this.signJWT = function (payload, expiresIn) {\n      return (0, _didJwt.createJWT)(payload, {\n        issuer: _this.did,\n        signer: _this.signer,\n        alg: _this.did.match('^did:uport:') || (0, _mnid.isMNID)(_this.did) ? 'ES256K' : 'ES256K-R',\n        expiresIn: expiresIn\n      });\n    };\n\n    (0, _uportDidResolver2.default)(registry || (0, _uportLite2.default)({ networks: networks ? configNetworks(networks) : {} }));\n    (0, _ethrDidResolver2.default)(ethrConfig || {});\n    (0, _httpsDidResolver2.default)();\n  }\n\n  /**\n   * Generate a DID and private key, effectively creating a new identity that can sign and verify data\n   *\n   * @example\n   * const {did, privateKey} = Credentials.createIdentity()\n   * const credentials = new Credentials({did, privateKey, ...})\n   *\n   * @returns {Object} keypair\n   *           - {String} keypair.did         An ethr-did string for the new identity\n   *           - {String} keypair.privateKey  The identity's private key, as a string\n   */\n\n\n  (0, _createClass3.default)(Credentials, [{\n    key: 'createDisclosureRequest',\n\n\n    /**\n     *  Creates a [Selective Disclosure Request JWT](https://github.com/uport-project/specs/blob/develop/messages/sharereq.md)\n     *\n     *  @example\n     *  const req = { requested: ['name', 'country'],\n     *                callbackUrl: 'https://myserver.com',\n     *                notifications: true }\n     *  credentials.createDisclosureRequest(req).then(jwt => {\n     *      ...\n     *  })\n     *\n     *  @param    {Object}             [params={}]           request params object\n     *  @param    {Array}              params.requested      an array of attributes for which you are requesting credentials to be shared for\n     *  @param    {Array}              params.verified       an array of attributes for which you are requesting verified credentials to be shared for\n     *  @param    {Boolean}            params.notifications  boolean if you want to request the ability to send push notifications\n     *  @param    {String}             params.callbackUrl    the url which you want to receive the response of this request\n     *  @param    {String}             params.networkId      network id of Ethereum chain of identity eg. 0x4 for rinkeby\n     *  @param    {String}             params.rpcUrl         JSON RPC url for use with account connecting to non standard (private or permissioned chain). The JSON-RPC url must match the `networkId`\n     *  @param    {String[]}           params.vc             An array of JWTs about the requester, signed by 3rd parties\n     *  @param    {String}             params.accountType    Ethereum account type: \"general\", \"segregated\", \"keypair\", or \"none\"\n     *  @param    {Number}             expiresIn             Seconds until expiry\n     *  @return   {Promise<Object, Error>}                   a promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n    value: function createDisclosureRequest() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var expiresIn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n\n      var payload = {};\n      if (params.requested) payload.requested = params.requested;\n      if (params.verified) payload.verified = params.verified;\n      if (params.notifications) payload.permissions = ['notifications'];\n      if (params.callbackUrl) payload.callback = params.callbackUrl;\n      if (params.networkId) payload.net = params.networkId;\n      if (params.rpcUrl) {\n        if (params.networkId) {\n          payload.rpc = params.rpcUrl;\n        } else {\n          return _promise2.default.reject(new Error('rpcUrl was specified but no networkId'));\n        }\n      }\n      if (params.vc) payload.vc = params.vc;\n      if (params.exp) payload.exp = params.exp;\n\n      if (params.accountType) {\n        if (['general', 'segregated', 'keypair', 'none'].indexOf(params.accountType) >= 0) {\n          payload.act = params.accountType;\n        } else {\n          return _promise2.default.reject(new Error('Unsupported accountType ' + params.accountType));\n        }\n      }\n\n      return this.signJWT((0, _extends3.default)({}, payload, { type: Types.DISCLOSURE_REQUEST }), params.exp ? undefined : expiresIn);\n    }\n\n    /**\n     *  Create a credential (a signed JSON Web Token)\n     *\n     *  @example\n     *  credentials.createVerification({\n     *   sub: '5A8bRWU3F7j3REx3vkJ...', // uPort address of user, likely a MNID\n     *   exp: <future timestamp>,\n     *   claim: { name: 'John Smith' }\n     *  }).then( credential => {\n     *   ...\n     *  })\n     *\n     * @param    {Object}            [credential]           a unsigned claim object\n     * @param    {String}            credential.sub         subject of credential (a valid DID)\n     * @param    {String}            credential.claim       claim about subject single key value or key mapping to object with multiple values (ie { address: {street: ..., zip: ..., country: ...}})\n     * @param    {String}            credential.exp         time at which this claim expires and is no longer valid (seconds since epoch)\n     * @return   {Promise<Object, Error>}                   a promise which resolves with a credential (JWT) or rejects with an error\n     */\n\n  }, {\n    key: 'createVerification',\n    value: function createVerification(_ref2) {\n      var sub = _ref2.sub,\n          claim = _ref2.claim,\n          exp = _ref2.exp,\n          vc = _ref2.vc,\n          callbackUrl = _ref2.callbackUrl;\n\n      return this.signJWT({ sub: sub, claim: claim, exp: exp, vc: vc, callbackUrl: callbackUrl });\n    }\n\n    /**\n     *  Creates a request a for a DID to [sign a verification](https://github.com/uport-project/specs/blob/develop/messages/verificationreq.md)\n     *\n     *  @example\n     *  const unsignedClaim = {\n     *    claim: {\n     *      \"Citizen of city X\": {\n     *        \"Allowed to vote\": true,\n     *        \"Document\": \"QmZZBBKPS2NWc6PMZbUk9zUHCo1SHKzQPPX4ndfwaYzmPW\"\n     *      }\n     *    },\n     *    sub: \"2oTvBxSGseWFqhstsEHgmCBi762FbcigK5u\"\n     *  }\n     *  const aud = '0x123...'\n     *  const sub = '0x456...'\n     *  const callbackUrl = 'https://my.cool.site/handleTheResponse'\n     *  credentials.createVerificationSignatureRequest(unsignedClaim, {aud, sub, callbackUrl}).then(jwt => {\n     *    // ...\n     *  })\n     *\n     * @param    {Object}      unsignedClaim       Unsigned claim object which you want the user to attest\n     * @param    {Object}      [opts]\n     * @param    {String}      [opts.aud]          The DID of the identity you want to sign the attestation\n     * @param    {String}      [opts.sub]          The DID which the unsigned claim is about\n     * @param    {String}      [opts.riss]         The DID of the identity you want to sign the Verified Claim\n     * @param    {String}      [opts.callbackUrl]  The url to receive the response of this request\n     * @param    {Object[]}    [opts.vc]           An array of JWTs about the requester, signed by 3rd parties\n     * @returns  {Promise<Object, Error>}          A promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n\n  }, {\n    key: 'createVerificationSignatureRequest',\n    value: function createVerificationSignatureRequest(unsignedClaim) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          aud = _ref3.aud,\n          sub = _ref3.sub,\n          riss = _ref3.riss,\n          callbackUrl = _ref3.callbackUrl,\n          vc = _ref3.vc,\n          expiresIn = _ref3.expiresIn;\n\n      return this.signJWT({\n        unsignedClaim: unsignedClaim,\n        sub: sub,\n        riss: riss,\n        aud: aud,\n        vc: vc,\n        callback: callbackUrl,\n        type: Types.VERIFICATION_SIGNATURE_REQUEST\n      }, expiresIn);\n    }\n\n    /**\n     * Create a JWT requesting a signature on a piece of structured/typed data conforming to\n     * the ERC712 specification\n     * @example\n     * // A ERC712 Greeting Structure\n     * const data = {\n     *   types: {\n     *     EIP712Domain: [\n     *       {name: 'name', type: 'string'},\n     *       {name: 'version', type: 'string'},\n     *       {name: 'chainId', type: 'uint256'},\n     *       {name: 'verifyingContract', type: 'address'},\n     *       {name: 'salt', type: 'bytes32'}\n     *     ],\n     *     Greeting: [\n     *       {name: 'text', type: 'string'},\n     *       {name: 'subject', type: 'string'},\n     *     ]\n     *   },\n     *   domain: {\n     *     name: 'My dapp',\n     *     version: '1.0',\n     *     chainId: 1,\n     *     verifyingContract: '0xdeadbeef',\n     *     salt: '0x999999999910101010101010'\n     *   },\n     *   primaryType: 'Greeting',\n     *   message: {\n     *     text: 'Hello',\n     *     subject: 'World'\n     *   }\n     * }\n     * const sub = 'did:ethr:0xbeef1234' // Who the claim is \"about\"\n     * const aud = 'did:ethr:0xbeef4567' // Who you are asking to sign the claim\n     * const callbackUrl = 'https://my.cool.site/handleTheResponse'\n     * const signRequestJWT = credentials.createTypedDataSignatureRequest(data, {sub, aud, callbackUrl})\n     * // Send the JWT to a client\n     * // ...\n     *\n     * @param {Object} typedData              the ERC712 data to sign\n     * @param {Object} opts                   additional options for the jwt\n     *   @param {String} opts.sub             the subject of the JWT (arbitrary)\n     *   @param {String} opts.aud             the did of the identity you want to sign the typed data\n     *   @param {String} opts.callback        callback URL to handle the response\n     * @returns {Promise<Object, Error>}      a promise which resolves to a signed JWT or rejects with an error\n     */\n\n  }, {\n    key: 'createTypedDataSignatureRequest',\n    value: function createTypedDataSignatureRequest(typedData) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          from = _ref4.from,\n          net = _ref4.net,\n          callback = _ref4.callback;\n\n      // Check if the typedData is a valid ERC712 request\n      var _arr = ['types', 'primaryType', 'message', 'domain'];\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var prop = _arr[_i];\n        if (!typedData[prop]) throw new Error('Invalid EIP712 Request, must include ' + prop);\n      }\n      return this.signJWT({ typedData: typedData, from: from, net: net, callback: callback, type: Types.TYPED_DATA_SIGNATURE_REQUEST });\n    }\n\n    /**\n     * Create a JWT requesting an eth_sign/personal_sign from a user.\n     * @param {String} data hex encoded data to sign\n     * @param {Object} opts Additional options for request\n     * @returns {Promise<Object, Error>}\n     */\n\n  }, {\n    key: 'createPersonalSignRequest',\n    value: function createPersonalSignRequest(data) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          from = _ref5.from,\n          net = _ref5.net,\n          callback = _ref5.callback;\n\n      return this.signJWT({ data: data, from: from, net: net, callback: callback, type: Types.PERSONAL_SIGN_REQUEST });\n    }\n\n    /**\n     *  Given a transaction object, similarly defined as the web3 transaction object,\n     *  it creates a JWT transaction request and appends addtional request options.\n     *\n     *  @example\n     *  const txObject = {\n     *    to: '0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347',\n     *    value: '0.1',\n     *    fn: \"setStatus(string 'hello', bytes32 '0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347')\",\n     *  }\n     *  connect.createTxRequest(txObject, {callbackUrl: 'http://mycb.domain'}).then(jwt => {\n     *    ...\n     *  })\n     *\n     *  @param    {Object}    txObj               A web3 style transaction object\n     *  @param    {Object}    [opts]\n     *  @param    {String}    [opts.callbackUrl]  The url to receive the response of this request\n     *  @param    {String}    [opts.exp]          Time at which this request expires and is no longer valid (seconds since epoch)\n     *  @param    {String}    [opts.networkId]    Network ID for which this transaction request is for\n     *  @param    {String}    [opts.label]\n     *  @return   {String}                        a transaction request jwt\n     */\n\n  }, {\n    key: 'createTxRequest',\n    value: function createTxRequest(txObj) {\n      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          callbackUrl = _ref6.callbackUrl,\n          _ref6$exp = _ref6.exp,\n          exp = _ref6$exp === undefined ? 600 : _ref6$exp,\n          networkId = _ref6.networkId,\n          label = _ref6.label;\n\n      var payload = {};\n      if (callbackUrl) payload.callback = callbackUrl;\n      if (networkId) payload.net = networkId;\n      if (label) payload.label = label;\n      return this.signJWT((0, _extends3.default)({}, payload, txObj, { type: Types.ETH_TX_REQUEST }), exp);\n    }\n\n    /**\n     * Creates a [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md).\n     *\n     * This can either be used to share information about the signing identity or as the response to a\n     * [Selective Disclosure Flow](https://github.com/uport-project/specs/blob/develop/flows/selectivedisclosure.md),\n     * where it can be used to authenticate the identity.\n     *\n     *  @example\n     *  credentials.createDisclosureResponse({own: {name: 'Lourdes Valentina Gomez'}}).then(jwt => {\n     *      ...\n     *  })\n     *\n     *  @param    {Object}             [payload={}]           request params object\n     *  @param    {JWT}                payload.req            A selective disclosure Request JWT if this is returned as part of an authentication flow\n     *  @param    {Object}             payload.own            An object of self attested claims about the signer (eg. name etc)\n     *  @param    {Array}              payload.verified       An array of attestation JWT's to include\n     *  @param    {MNID}               payload.nad            An ethereum address encoded as an [MNID](https://github.com/uport-project/mnid)\n     *  @param    {Array}              payload.capabilities   An array of capability JWT's to include\n     *  @return   {Promise<Object, Error>}                    a promise which resolves with a signed JSON Web Token or rejects with an error\n     */\n\n  }, {\n    key: 'createDisclosureResponse',\n    value: function () {\n      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var expiresIn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n        var verified;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!payload.req) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return (0, _didJwt.verifyJWT)(payload.req);\n\n              case 3:\n                verified = _context.sent;\n\n                if (verified.issuer) {\n                  payload.aud = verified.issuer;\n                }\n\n              case 5:\n                return _context.abrupt('return', this.signJWT((0, _extends3.default)({}, payload, { type: Types.DISCLOSURE_RESPONSE }), expiresIn));\n\n              case 6:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createDisclosureResponse() {\n        return _ref7.apply(this, arguments);\n      }\n\n      return createDisclosureResponse;\n    }()\n\n    /**\n     * Parse a selective disclosure response, and verify signatures on each signed claim (\"verification\") included.\n     * This function renames and applies special handling to certain recognized key-value pairs, and preserves others\n     * untouched.\n     * \n     * @private @deprecated\n     * @param     {Object}             response           A selective disclosure response payload, with associated did doc\n     * @param     {Object}             response.payload   A selective disclosure response payload, with associated did doc\n     * @param     {Object}             response.doc\n     */\n\n  }, {\n    key: 'processDisclosurePayload',\n    value: function () {\n      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(_ref8) {\n        var _this2 = this;\n\n        var doc = _ref8.doc,\n            payload = _ref8.payload;\n\n        var _payload$own, own, _payload$capabilities, capabilities, aud, req, iat, exp, type, mnid, deviceKey, did, boxPub, verified, rest, _doc$uportProfile, uportProfile, processed, invalid, verifying;\n\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Extract known key-value pairs from payload\n                _payload$own = payload.own, own = _payload$own === undefined ? {} : _payload$own, _payload$capabilities = payload.capabilities, capabilities = _payload$capabilities === undefined ? [] : _payload$capabilities, aud = payload.aud, req = payload.req, iat = payload.iat, exp = payload.exp, type = payload.type, mnid = payload.nad, deviceKey = payload.dad, did = payload.iss, boxPub = payload.boxPub, verified = payload.verified, rest = (0, _objectWithoutProperties3.default)(payload, ['own', 'capabilities', 'aud', 'req', 'iat', 'exp', 'type', 'nad', 'dad', 'iss', 'boxPub', 'verified']);\n                _doc$uportProfile = doc.uportProfile, uportProfile = _doc$uportProfile === undefined ? {} : _doc$uportProfile;\n\n                // Combine doc and payload into a single object, changing the names of some keys\n\n                processed = (0, _extends3.default)({\n                  did: did,\n                  boxPub: boxPub\n                }, own, uportProfile, rest);\n\n\n                if (deviceKey) processed.deviceKey = deviceKey;\n\n                if (mnid) {\n                  processed.mnid = mnid;\n                  processed.address = (0, _mnid.decode)(mnid).address;\n                }\n\n                // Push notifications are the only supported capability at the moment\n                if (capabilities.length === 1) {\n                  processed.pushToken = capabilities[0];\n                }\n\n                // Verify and decode each jwt included in the `verified` array, \n                // and return the verified property as an array of decoded objects.\n                // Return invalid jwts in the `invalid` array\n\n                if (!verified) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                invalid = [];\n                verifying = verified.map(function (token) {\n                  return (0, _didJwt.verifyJWT)(token, { audience: _this2.did }).catch(function () {\n                    invalid.push(token);\n                    return _promise2.default.resolve(null);\n                  });\n                });\n\n                // Format payloads and remove invalid JWTs\n\n                _context2.next = 11;\n                return _promise2.default.all(verifying);\n\n              case 11:\n                _context2.t0 = function (v) {\n                  return v ? (0, _extends3.default)({}, v.payload, { jwt: v.jwt }) : null;\n                };\n\n                _context2.t1 = function (list, item) {\n                  return item ? [].concat((0, _toConsumableArray3.default)(list), [item]) : list;\n                };\n\n                _context2.t2 = [];\n                processed.verified = _context2.sent.map(_context2.t0).reduce(_context2.t1, _context2.t2);\n\n\n                processed.invalid = invalid;\n\n              case 16:\n                return _context2.abrupt('return', processed);\n\n              case 17:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function processDisclosurePayload(_x10) {\n        return _ref9.apply(this, arguments);\n      }\n\n      return processDisclosurePayload;\n    }()\n\n    /**\n     *  Authenticates [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md) from uPort\n     *  client as part of the [Selective Disclosure Flow](https://github.com/uport-project/specs/blob/develop/flows/selectivedisclosure.md).\n     *\n     *  It Verifies and parses the given response token and verifies the challenge response flow.\n     *\n     *  @example\n     *  const resToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....'\n     *  credentials.authenticateDisclosureResponse(resToken).then(res => {\n     *      const credentials = res.verified\n     *      const name =  res.name\n     *      ...\n     *  })\n     *\n     *  @param    {String}                  token                 a response token\n     *  @param    {String}                  [callbackUrl=null]    callbackUrl\n     *  @return   {Promise<Object, Error>}                        a promise which resolves with a parsed response or rejects with an error.\n     */\n\n  }, {\n    key: 'authenticateDisclosureResponse',\n    value: function () {\n      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(token) {\n        var callbackUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        var _ref11, payload, doc, challenge;\n\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _didJwt.verifyJWT)(token, {\n                  audience: this.did,\n                  callbackUrl: callbackUrl,\n                  auth: true\n                });\n\n              case 2:\n                _ref11 = _context3.sent;\n                payload = _ref11.payload;\n                doc = _ref11.doc;\n\n                if (!payload.req) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.next = 8;\n                return (0, _didJwt.verifyJWT)(payload.req);\n\n              case 8:\n                challenge = _context3.sent;\n\n                if (!(challenge.payload.iss !== this.did)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw new Error('Challenge issuer does not match current identity: ' + challenge.payload.iss + ' !== ' + this.did);\n\n              case 13:\n                if (!(challenge.payload.type !== Types.DISCLOSURE_REQUEST)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                throw new Error('Challenge payload type invalid: ' + challenge.payload.type);\n\n              case 17:\n                return _context3.abrupt('return', this.processDisclosurePayload({ payload: payload, doc: doc }));\n\n              case 18:\n                _context3.next = 21;\n                break;\n\n              case 20:\n                throw new Error('Challenge was not included in response');\n\n              case 21:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function authenticateDisclosureResponse(_x12) {\n        return _ref10.apply(this, arguments);\n      }\n\n      return authenticateDisclosureResponse;\n    }()\n\n    /**\n     *  Verify and return profile from a [Selective Disclosure Response JWT](https://github.com/uport-project/specs/blob/develop/messages/shareresp.md).\n     *\n     * The main difference between this and `authenticateDisclosureResponse()` is that it does not verify the challenge.\n     * This can be used to verify user profiles that have been shared through other methods such as QR codes and messages.\n     *\n     *  @example\n     *  const resToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....'\n     *  credentials.verifyDisclosure(resToken).then(profile => {\n     *      const credentials = profile.verified\n     *      const name =  profile.name\n     *      ...\n     *  })\n     *\n     *  @param    {String}                  token                 a response token\n     *  @return   {Promise<Object, Error>}                        a promise which resolves with a parsed response or rejects with an error.\n     */\n\n  }, {\n    key: 'verifyDisclosure',\n    value: function () {\n      var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(token) {\n        var _ref13, payload, doc;\n\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _didJwt.verifyJWT)(token, { audience: this.did });\n\n              case 2:\n                _ref13 = _context4.sent;\n                payload = _ref13.payload;\n                doc = _ref13.doc;\n                return _context4.abrupt('return', this.processDisclosurePayload({ payload: payload, doc: doc }));\n\n              case 6:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function verifyDisclosure(_x13) {\n        return _ref12.apply(this, arguments);\n      }\n\n      return verifyDisclosure;\n    }()\n\n    /**\n     *  Builds and returns a contract object which can be used to interact with\n     *  a given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\n     *  you can call the contract functions with this object. Each call will create a request.\n     *\n     *  @param    {Object}       abi          contract ABI\n     *  @return   {Object}                    contract object\n     */\n\n  }, {\n    key: 'contract',\n    value: function contract(abi) {\n      var _this3 = this;\n\n      var txObjHandler = function txObjHandler(txObj, opts) {\n        if (txObj.function) txObj.fn = txObj.function;\n        delete txObj['function'];\n        return _this3.createTxRequest(txObj, opts);\n      };\n      return (0, _Contract.ContractFactory)(txObjHandler.bind(this))(abi);\n    }\n  }], [{\n    key: 'createIdentity',\n    value: function createIdentity() {\n      var kp = secp256k1.genKeyPair();\n      var publicKey = kp.getPublic('hex');\n      var privateKey = kp.getPrivate('hex');\n      var address = (0, _Digest.toEthereumAddress)(publicKey);\n      var did = 'did:ethr:' + address;\n      return { did: did, privateKey: privateKey };\n    }\n  }]);\n  return Credentials;\n}();\n\nvar configNetworks = function configNetworks(nets) {\n  (0, _keys2.default)(nets).forEach(function (key) {\n    var net = nets[key];\n    if ((typeof net === 'undefined' ? 'undefined' : (0, _typeof3.default)(net)) === 'object') {\n      ;['registry', 'rpcUrl'].forEach(function (key) {\n        if (!net.hasOwnProperty(key)) throw new Error('Malformed network config object, object must have \\'' + key + '\\' key specified.');\n      });\n    } else {\n      throw new Error('Network configuration object required');\n    }\n  });\n  return nets;\n};\n\nexports.default = Credentials;"},"lineCount":849}},"hash":"28d63cc45d0c065005c3189a791fe8b3","cacheData":{"env":{}}}