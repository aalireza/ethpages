{"id":"node_modules/nets/index.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/nets/package.json","includedInParent":true,"mtime":1550368277431},{"name":"request","loc":{"line":1,"column":18},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/nets/index.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/xhr/index.js"},{"name":"process","parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/nets/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js"},{"name":"buffer","parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/nets/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\nvar req = require('request')\n\nmodule.exports = Nets\n\nfunction Nets (opts, cb) {\n  if (typeof opts === 'string') opts = { uri: opts }\n\n  // in node, if encoding === null then response will be a Buffer. we want this to be the default\n  if (!opts.hasOwnProperty('encoding')) opts.encoding = null\n\n  // in browser, we should by default convert the arraybuffer into a Buffer\n  if (process.browser && !opts.hasOwnProperty('json') && opts.encoding === null) {\n    opts.responseType = 'arraybuffer'\n    var originalCb = cb\n    cb = bufferify\n  }\n\n  function bufferify (err, resp, body) {\n    if (body) body = new Buffer(new Uint8Array(body))\n    originalCb(err, resp, body)\n  }\n\n  return req(opts, cb)\n}\n","map":{"mappings":[{"source":"node_modules/nets/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nets/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/nets/index.js":"var req = require('request')\n\nmodule.exports = Nets\n\nfunction Nets (opts, cb) {\n  if (typeof opts === 'string') opts = { uri: opts }\n\n  // in node, if encoding === null then response will be a Buffer. we want this to be the default\n  if (!opts.hasOwnProperty('encoding')) opts.encoding = null\n\n  // in browser, we should by default convert the arraybuffer into a Buffer\n  if (process.browser && !opts.hasOwnProperty('json') && opts.encoding === null) {\n    opts.responseType = 'arraybuffer'\n    var originalCb = cb\n    cb = bufferify\n  }\n\n  function bufferify (err, resp, body) {\n    if (body) body = new Buffer(new Uint8Array(body))\n    originalCb(err, resp, body)\n  }\n\n  return req(opts, cb)\n}\n"},"lineCount":27}},"hash":"ddafa5fe9e4900cf2b6f86e584b517f7","cacheData":{"env":{}}}