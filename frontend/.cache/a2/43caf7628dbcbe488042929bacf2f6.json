{"id":"node_modules/mnid/lib/index.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/package.json","includedInParent":true,"mtime":1550368277596},{"name":"js-sha3","loc":{"line":10,"column":21},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/lib/index.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/node_modules/js-sha3/src/sha3.js"},{"name":"buffer","loc":{"line":12,"column":22},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/lib/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"},{"name":"base-x","loc":{"line":16,"column":18},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/mnid/lib/index.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/base-x/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = encode;\nexports.decode = decode;\nexports.isMNID = isMNID;\n\nvar _jsSha = require('js-sha3');\n\nvar _buffer = require('buffer');\n\nvar BASE58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base58 = require('base-x')(BASE58);\nvar hex = require('base-x')('0123456789abcdef');\n\nfunction checksum(payload) {\n  return new _buffer.Buffer((0, _jsSha.sha3_256)(_buffer.Buffer.concat(payload)), 'hex').slice(0, 4);\n}\n\nfunction encode(_ref) {\n  var network = _ref.network,\n      address = _ref.address;\n\n  var payload = [new _buffer.Buffer('01', 'hex'), hex.decode(network.slice(2)), new _buffer.Buffer(address.slice(2), 'hex')];\n  payload.push(checksum(payload));\n  return base58.encode(_buffer.Buffer.concat(payload));\n}\n\nfunction decode(encoded) {\n  var data = _buffer.Buffer.from(base58.decode(encoded));\n  var netLength = data.length - 24;\n  var version = data.slice(0, 1);\n  var network = data.slice(1, netLength);\n  var address = data.slice(netLength, 20 + netLength);\n  var check = data.slice(netLength + 20);\n  if (check.equals(checksum([version, network, address]))) {\n    return {\n      network: '0x' + hex.encode(network),\n      address: '0x' + address.toString('hex')\n    };\n  } else {\n    throw new Error('Invalid address checksum');\n  }\n}\n\nfunction isMNID(encoded) {\n  try {\n    var data = _buffer.Buffer.from(base58.decode(encoded));\n    return data.length > 24 && data[0] === 1;\n  } catch (e) {\n    return false;\n  }\n}","map":{"mappings":[{"source":"node_modules/mnid/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mnid/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/mnid/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = encode;\nexports.decode = decode;\nexports.isMNID = isMNID;\n\nvar _jsSha = require('js-sha3');\n\nvar _buffer = require('buffer');\n\nvar BASE58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base58 = require('base-x')(BASE58);\nvar hex = require('base-x')('0123456789abcdef');\n\nfunction checksum(payload) {\n  return new _buffer.Buffer((0, _jsSha.sha3_256)(_buffer.Buffer.concat(payload)), 'hex').slice(0, 4);\n}\n\nfunction encode(_ref) {\n  var network = _ref.network,\n      address = _ref.address;\n\n  var payload = [new _buffer.Buffer('01', 'hex'), hex.decode(network.slice(2)), new _buffer.Buffer(address.slice(2), 'hex')];\n  payload.push(checksum(payload));\n  return base58.encode(_buffer.Buffer.concat(payload));\n}\n\nfunction decode(encoded) {\n  var data = _buffer.Buffer.from(base58.decode(encoded));\n  var netLength = data.length - 24;\n  var version = data.slice(0, 1);\n  var network = data.slice(1, netLength);\n  var address = data.slice(netLength, 20 + netLength);\n  var check = data.slice(netLength + 20);\n  if (check.equals(checksum([version, network, address]))) {\n    return {\n      network: '0x' + hex.encode(network),\n      address: '0x' + address.toString('hex')\n    };\n  } else {\n    throw new Error('Invalid address checksum');\n  }\n}\n\nfunction isMNID(encoded) {\n  try {\n    var data = _buffer.Buffer.from(base58.decode(encoded));\n    return data.length > 24 && data[0] === 1;\n  } catch (e) {\n    return false;\n  }\n}"},"lineCount":55}},"hash":"17f2e1f0ed53e6099208d10d72d81de1","cacheData":{"env":{}}}