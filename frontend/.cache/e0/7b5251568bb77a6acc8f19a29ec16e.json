{"id":"node_modules/uport-did-resolver/lib/register.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/lib/register.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/src/register.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/package.json","includedInParent":true,"mtime":1550368277432},{"name":"did-resolver","loc":{"line":41,"column":29},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/lib/register.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-resolver/lib/resolver.js"},{"name":"uport-lite","loc":{"line":42,"column":43},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-did-resolver/lib/register.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-lite/lib/index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar did_resolver_1 = require(\"did-resolver\");\nvar uport_lite_1 = __importDefault(require(\"uport-lite\"));\nfunction convertToDid(did, legacy) {\n    var publicKey = [{\n            id: did + \"#keys-1\",\n            type: 'Secp256k1VerificationKey2018',\n            owner: did,\n            publicKeyHex: legacy.publicKey.match(/^0x/) ? legacy.publicKey.slice(2) : legacy.publicKey\n        }];\n    if (legacy.publicEncKey) {\n        publicKey.push({\n            id: did + \"#keys-2\",\n            type: 'Curve25519EncryptionPublicKey',\n            owner: did,\n            publicKeyBase64: legacy.publicEncKey\n        });\n    }\n    var doc = {\n        '@context': 'https://w3id.org/did/v1',\n        id: did,\n        publicKey: publicKey,\n        authentication: [{\n                type: 'Secp256k1SignatureAuthentication2018',\n                publicKey: did + \"#keys-1\"\n            }]\n    };\n    if (legacy.name || legacy.description || legacy.image) {\n        var profile = Object.assign({}, legacy);\n        delete profile['publicKey'];\n        delete profile['publicEncKey'];\n        doc.uportProfile = profile;\n    }\n    return doc;\n}\nexports.convertToDid = convertToDid;\nfunction register(configured) {\n    var cpsRegistry = configured || uport_lite_1.default();\n    var registry = function (mnid) { return new Promise(function (resolve, reject) {\n        cpsRegistry(mnid, function (error, doc) { return error ? reject(error) : resolve(doc); });\n    }); };\n    function resolve(did, parsed) {\n        return __awaiter(this, void 0, void 0, function () {\n            var doc;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, registry(parsed.id)];\n                    case 1:\n                        doc = _a.sent();\n                        if (!doc)\n                            return [2 /*return*/, null\n                                // Check if real DID document or legacy\n                            ];\n                        // Check if real DID document or legacy\n                        if (doc['@context'] === 'https://w3id.org/did/v1')\n                            return [2 /*return*/, doc];\n                        if (typeof doc['publicKey'] === 'string') {\n                            return [2 /*return*/, convertToDid(did, doc)];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    }\n    did_resolver_1.registerMethod('uport', resolve);\n}\nexports.default = register;\n","map":{"version":3,"file":"register.js","sourceRoot":"","sources":["../src/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAgF;AAChF,0DAAkC;AAUlC,SAAgB,YAAY,CAAE,GAAW,EAAE,MAAmB;IAC5D,IAAM,SAAS,GAAgB,CAAC;YAC9B,EAAE,EAAK,GAAG,YAAS;YACnB,IAAI,EAAE,8BAA8B;YACpC,KAAK,EAAE,GAAG;YACV,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS;SAC3F,CAAC,CAAA;IAEF,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB,SAAS,CAAC,IAAI,CAAC;YACb,EAAE,EAAK,GAAG,YAAS;YACnB,IAAI,EAAE,+BAA+B;YACrC,KAAK,EAAE,GAAG;YACV,eAAe,EAAE,MAAM,CAAC,YAAY;SACrC,CAAC,CAAA;KACH;IAED,IAAM,GAAG,GAAgB;QACvB,UAAU,EAAE,yBAAyB;QACrC,EAAE,EAAE,GAAG;QACP,SAAS,WAAA;QACT,cAAc,EAAE,CAAC;gBACf,IAAI,EAAE,sCAAsC;gBAC5C,SAAS,EAAK,GAAG,YAAS;aAC3B,CAAC;KACH,CAAA;IAED,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,KAAK,EAAE;QACrD,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;QACzC,OAAO,OAAO,CAAC,WAAW,CAAC,CAAA;QAC3B,OAAO,OAAO,CAAC,cAAc,CAAC,CAAA;QAC9B,GAAG,CAAC,YAAY,GAAG,OAAO,CAAA;KAC3B;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAlCD,oCAkCC;AAED,SAAwB,QAAQ,CAAE,UAA8B;IAC9D,IAAM,WAAW,GAAsB,UAAU,IAAI,oBAAS,EAAE,CAAA;IAEhE,IAAM,QAAQ,GAAG,UAAC,IAAY,IAAiD,OAAA,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACzG,WAAW,CAAC,IAAI,EAAE,UAAC,KAAW,EAAE,GAAS,IAAK,OAAA,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAApC,CAAoC,CAAC,CAAA;IACrF,CAAC,CAAC,EAF6E,CAE7E,CAAA;IAEF,SAAe,OAAO,CAAE,GAAW,EAAE,MAAiB;;;;;4BACxC,qBAAM,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAA;;wBAA/B,GAAG,GAAG,SAAyB;wBACrC,IAAI,CAAC,GAAG;4BAAE,sBAAO,IAAI;gCACrB,uCAAuC;8BADlB;wBACrB,uCAAuC;wBACvC,IAAkB,GAAI,CAAC,UAAU,CAAC,KAAK,yBAAyB;4BAAE,sBAAoB,GAAG,EAAA;wBACzF,IAAI,OAAO,GAAG,CAAC,WAAW,CAAC,KAAK,QAAQ,EAAE;4BACxC,sBAAO,YAAY,CAAC,GAAG,EAAe,GAAG,CAAC,EAAA;yBAC3C;wBACD,sBAAO,IAAI,EAAA;;;;KACZ;IAED,6BAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AAClC,CAAC;AAnBD,2BAmBC","sourcesContent":["import { registerMethod, DIDDocument, ParsedDID, PublicKey } from 'did-resolver'\nimport UportLite from 'uport-lite'\n\nexport declare interface LegacyUport {\n  publicKey: string\n  publicEncKey?: string\n  name?: string\n  description?: string\n  image?: any\n}\n\nexport function convertToDid (did: string, legacy: LegacyUport) {\n  const publicKey: PublicKey[] = [{\n    id: `${did}#keys-1`,\n    type: 'Secp256k1VerificationKey2018',\n    owner: did,\n    publicKeyHex: legacy.publicKey.match(/^0x/) ? legacy.publicKey.slice(2) : legacy.publicKey\n  }]\n\n  if (legacy.publicEncKey) {\n    publicKey.push({\n      id: `${did}#keys-2`,\n      type: 'Curve25519EncryptionPublicKey',\n      owner: did,\n      publicKeyBase64: legacy.publicEncKey\n    })\n  }\n\n  const doc: DIDDocument = {\n    '@context': 'https://w3id.org/did/v1',\n    id: did,\n    publicKey,\n    authentication: [{\n      type: 'Secp256k1SignatureAuthentication2018',\n      publicKey: `${did}#keys-1`\n    }]\n  }\n\n  if (legacy.name || legacy.description || legacy.image) {\n    const profile = Object.assign({}, legacy)\n    delete profile['publicKey']\n    delete profile['publicEncKey']\n    doc.uportProfile = profile\n  }\n  return doc\n}\n\nexport default function register (configured?: UportLiteRegistry) {\n  const cpsRegistry: UportLiteRegistry = configured || UportLite()\n\n  const registry = (mnid: string) : Promise<LegacyUport | DIDDocument | null> => new Promise((resolve, reject) => {\n    cpsRegistry(mnid, (error?: any, doc?: any) => error ? reject(error) : resolve(doc))\n  })\n\n  async function resolve (did: string, parsed: ParsedDID) : Promise<DIDDocument | null> {\n    const doc = await registry(parsed.id)\n    if (!doc) return null\n    // Check if real DID document or legacy\n    if ((<DIDDocument>doc)['@context'] === 'https://w3id.org/did/v1') return <DIDDocument>doc\n    if (typeof doc['publicKey'] === 'string') {\n      return convertToDid(did, <LegacyUport>doc)\n    }\n    return null\n  }\n\n  registerMethod('uport', resolve)\n}\n"]}},"hash":"539f1e3aa226960a6f0b53c500429358","cacheData":{"env":{}}}