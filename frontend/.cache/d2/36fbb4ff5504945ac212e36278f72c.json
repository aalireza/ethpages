{"id":"node_modules/uport-transports/lib/transport/poll.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-transports/package.json","includedInParent":true,"mtime":1550368277431},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-transports/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"nets","loc":{"line":7,"column":20},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/uport-transports/lib/transport/poll.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/nets/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nets = require('nets');\n\nvar _nets2 = _interopRequireDefault(_nets);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar POLLING_INTERVAL = 2000;\n\n/**\n *  A general polling function. Polls a given url and parse message according to given parsing functions, promise resolves on response or error.\n *\n *  @param    {String}                  url                url polled\n *  @param    {Function}                messageParse       function that parses response from get request, also determines if response is available to decide to continue polling or not\n *  @param    {Function}                errorParse         function that parses response from get request and determines if error was returned.\n *  @param    {Integer}                 [pollingInterval]  ms interval at which the given url is polled\n *  @param    {Function}                [cancelled]        function which returns boolean, if returns true, polling stops\n *  @return   {Promise<Object, Error>}                     a promise which resolves with obj/message or rejects with an error\n */\nvar poll = function poll(url, messageParse, errorParse) {\n  var cancelled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {\n    return false;\n  };\n  var pollingInterval = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : POLLING_INTERVAL;\n  return new Promise(function (resolve, reject) {\n    var interval = setInterval(function () {\n      (0, _nets2.default)({\n        uri: url,\n        json: true,\n        method: 'GET',\n        withCredentials: false,\n        rejectUnauthorized: false\n      }, function (err, res, body) {\n        if (err) return reject(err);\n\n        if (cancelled()) {\n          clearInterval(interval);\n          return reject(new Error('Request Cancelled'));\n        }\n        try {\n          var messageError = errorParse(body);\n          var message = messageParse(body);\n          if (messageError) {\n            clearInterval(interval);\n            return reject(messageError);\n          }\n          if (message) {\n            clearInterval(interval);\n            return resolve(message);\n          }\n        } catch (err) {\n          clearInterval(interval);\n          return reject(err);\n        }\n      });\n    }, pollingInterval);\n  });\n};\n\nexports.default = poll;","map":{"mappings":[{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/uport-transports/lib/transport/poll.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"node_modules/uport-transports/lib/transport/poll.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nets = require('nets');\n\nvar _nets2 = _interopRequireDefault(_nets);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar POLLING_INTERVAL = 2000;\n\n/**\n *  A general polling function. Polls a given url and parse message according to given parsing functions, promise resolves on response or error.\n *\n *  @param    {String}                  url                url polled\n *  @param    {Function}                messageParse       function that parses response from get request, also determines if response is available to decide to continue polling or not\n *  @param    {Function}                errorParse         function that parses response from get request and determines if error was returned.\n *  @param    {Integer}                 [pollingInterval]  ms interval at which the given url is polled\n *  @param    {Function}                [cancelled]        function which returns boolean, if returns true, polling stops\n *  @return   {Promise<Object, Error>}                     a promise which resolves with obj/message or rejects with an error\n */\nvar poll = function poll(url, messageParse, errorParse) {\n  var cancelled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {\n    return false;\n  };\n  var pollingInterval = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : POLLING_INTERVAL;\n  return new Promise(function (resolve, reject) {\n    var interval = setInterval(function () {\n      (0, _nets2.default)({\n        uri: url,\n        json: true,\n        method: 'GET',\n        withCredentials: false,\n        rejectUnauthorized: false\n      }, function (err, res, body) {\n        if (err) return reject(err);\n\n        if (cancelled()) {\n          clearInterval(interval);\n          return reject(new Error('Request Cancelled'));\n        }\n        try {\n          var messageError = errorParse(body);\n          var message = messageParse(body);\n          if (messageError) {\n            clearInterval(interval);\n            return reject(messageError);\n          }\n          if (message) {\n            clearInterval(interval);\n            return resolve(message);\n          }\n        } catch (err) {\n          clearInterval(interval);\n          return reject(err);\n        }\n      });\n    }, pollingInterval);\n  });\n};\n\nexports.default = poll;"},"lineCount":65}},"hash":"a5676a3196beb62c950e932e5f9d9c33","cacheData":{"env":{}}}