{"id":"node_modules/did-jwt/lib/VerifierAlgorithm.js","dependencies":[{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/package.json","includedInParent":true,"mtime":1550371955498},{"name":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/package.json","includedInParent":true,"mtime":1550368277433},{"name":"elliptic","loc":{"line":10,"column":24},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/VerifierAlgorithm.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/elliptic/lib/elliptic.js"},{"name":"./Digest","loc":{"line":12,"column":22},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/VerifierAlgorithm.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/Digest.js"},{"name":"base64url","loc":{"line":14,"column":25},"parent":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/did-jwt/lib/VerifierAlgorithm.js","resolved":"/Users/sashavol/Misc/ethdenver-keybook/frontend/node_modules/base64url/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toSignatureObject = toSignatureObject;\nexports.verifyES256K = verifyES256K;\nexports.verifyRecoverableES256K = verifyRecoverableES256K;\n\nvar _elliptic = require('elliptic');\n\nvar _Digest = require('./Digest');\n\nvar _base64url = require('base64url');\n\nvar _base64url2 = _interopRequireDefault(_base64url);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar secp256k1 = new _elliptic.ec('secp256k1');\n\n// converts a JOSE signature to it's components\nfunction toSignatureObject(signature) {\n  var recoverable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var rawsig = _base64url2.default.toBuffer(signature);\n  if (rawsig.length !== (recoverable ? 65 : 64)) throw new Error('wrong signature length');\n  var r = rawsig.slice(0, 32).toString('hex');\n  var s = rawsig.slice(32, 64).toString('hex');\n  var sigObj = { r: r, s: s };\n  if (recoverable) {\n    sigObj.recoveryParam = rawsig[64];\n  }\n  return sigObj;\n}\n\nfunction verifyES256K(data, signature, authenticators) {\n  var hash = (0, _Digest.sha256)(data);\n  var sigObj = toSignatureObject(signature);\n  var signer = authenticators.find(function (_ref) {\n    var publicKeyHex = _ref.publicKeyHex;\n    return secp256k1.keyFromPublic(publicKeyHex, 'hex').verify(hash, sigObj);\n  });\n  if (!signer) throw new Error('Signature invalid for JWT');\n  return signer;\n}\n\nfunction verifyRecoverableES256K(data, signature, authenticators) {\n  var sigObj = toSignatureObject(signature, true);\n  var hash = (0, _Digest.sha256)(data);\n  var recoveredKey = secp256k1.recoverPubKey(hash, sigObj, sigObj.recoveryParam);\n  var recoveredPublicKeyHex = recoveredKey.encode('hex');\n  var recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);\n  var recoveredAddress = (0, _Digest.toEthereumAddress)(recoveredPublicKeyHex);\n  var signer = authenticators.find(function (_ref2) {\n    var publicKeyHex = _ref2.publicKeyHex,\n        ethereumAddress = _ref2.ethereumAddress;\n    return publicKeyHex === recoveredPublicKeyHex || publicKeyHex === recoveredCompressedPublicKeyHex || ethereumAddress === recoveredAddress;\n  });\n  if (!signer) throw new Error('Signature invalid for JWT');\n  return signer;\n}\n\nvar algorithms = { ES256K: verifyES256K, 'ES256K-R': verifyRecoverableES256K };\n\nfunction VerifierAlgorithm(alg) {\n  var impl = algorithms[alg];\n  if (!impl) throw new Error('Unsupported algorithm ' + alg);\n  return impl;\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject;\n\nmodule.exports = VerifierAlgorithm;","map":{"mappings":[{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/did-jwt/lib/VerifierAlgorithm.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"node_modules/did-jwt/lib/VerifierAlgorithm.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toSignatureObject = toSignatureObject;\nexports.verifyES256K = verifyES256K;\nexports.verifyRecoverableES256K = verifyRecoverableES256K;\n\nvar _elliptic = require('elliptic');\n\nvar _Digest = require('./Digest');\n\nvar _base64url = require('base64url');\n\nvar _base64url2 = _interopRequireDefault(_base64url);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar secp256k1 = new _elliptic.ec('secp256k1');\n\n// converts a JOSE signature to it's components\nfunction toSignatureObject(signature) {\n  var recoverable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var rawsig = _base64url2.default.toBuffer(signature);\n  if (rawsig.length !== (recoverable ? 65 : 64)) throw new Error('wrong signature length');\n  var r = rawsig.slice(0, 32).toString('hex');\n  var s = rawsig.slice(32, 64).toString('hex');\n  var sigObj = { r: r, s: s };\n  if (recoverable) {\n    sigObj.recoveryParam = rawsig[64];\n  }\n  return sigObj;\n}\n\nfunction verifyES256K(data, signature, authenticators) {\n  var hash = (0, _Digest.sha256)(data);\n  var sigObj = toSignatureObject(signature);\n  var signer = authenticators.find(function (_ref) {\n    var publicKeyHex = _ref.publicKeyHex;\n    return secp256k1.keyFromPublic(publicKeyHex, 'hex').verify(hash, sigObj);\n  });\n  if (!signer) throw new Error('Signature invalid for JWT');\n  return signer;\n}\n\nfunction verifyRecoverableES256K(data, signature, authenticators) {\n  var sigObj = toSignatureObject(signature, true);\n  var hash = (0, _Digest.sha256)(data);\n  var recoveredKey = secp256k1.recoverPubKey(hash, sigObj, sigObj.recoveryParam);\n  var recoveredPublicKeyHex = recoveredKey.encode('hex');\n  var recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);\n  var recoveredAddress = (0, _Digest.toEthereumAddress)(recoveredPublicKeyHex);\n  var signer = authenticators.find(function (_ref2) {\n    var publicKeyHex = _ref2.publicKeyHex,\n        ethereumAddress = _ref2.ethereumAddress;\n    return publicKeyHex === recoveredPublicKeyHex || publicKeyHex === recoveredCompressedPublicKeyHex || ethereumAddress === recoveredAddress;\n  });\n  if (!signer) throw new Error('Signature invalid for JWT');\n  return signer;\n}\n\nvar algorithms = { ES256K: verifyES256K, 'ES256K-R': verifyRecoverableES256K };\n\nfunction VerifierAlgorithm(alg) {\n  var impl = algorithms[alg];\n  if (!impl) throw new Error('Unsupported algorithm ' + alg);\n  return impl;\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject;\n\nmodule.exports = VerifierAlgorithm;"},"lineCount":74}},"hash":"97621f975252ac8958a55e4bc79d5163","cacheData":{"env":{}}}